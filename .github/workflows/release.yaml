name: create-release
run-name: Create release '${{ inputs.release_version_number }}'
# What it does:
# - Call release-prepare-no-maven
# - package_and_publish_helm
# - Call release-publish-draft-and-pr: create pr false
on:
  workflow_dispatch:
    inputs:
      notes:
        description: "Release notes"
        required: false
        type: string
        default: ''
      release_version_number:
        description: "Provide release version number"
        required: true
        type: string

jobs:
  package_and_publish_helm:
    name: Build and publish helm chart
    runs-on: ubuntu-22.04
    steps:
      # https://github.com/actions/checkout
      - uses: actions/checkout@v4
        name: Checkout Code

      - uses: jfrog/setup-jfrog-cli@v3
        id: setup_jf_cli
        name: Setup jfrog CLI
        env:
          # JFrog platform url (for example: https://acme.jfrog.io) 
          JF_URL: ${{ secrets.FR_HELM_REPO }}
          # JFrog Platform access token
          JF_ACCESS_TOKEN: ${{ secrets.FR_ARTIFACTORY_USER_ACCESS_TOKEN }}

      - id: create_helm_packages
        name: Create Helm Packages
        run: |
          # For each directory in root (multiple packages to be published)
          for d in */ ; do
            # Remove a trailing / if it exists
            dir=${d%/}
            # Get the version value from Chart.yaml
            version=$(docker run --rm -v ${PWD}:/workdir mikefarah/yq:3.4.1 yq r $dir/Chart.yaml version)
            # Make the package with the retrieved value
            make package_helm name=$dir version=$version
          done

      - name: Publish Helm Package to repository
        id: publish_helm_package_to_repo
        run: |
          # Foreach tgz file in the dir which would have been created above
          for tgz in $(ls *.tgz) ; do
            make publish_helm name=$tgz
          done
